apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer
  namespace: db
  labels:
    app: pgbouncer
spec:
  revisionHistoryLimit: 1  # removes old replicasets for deployment rollbacks
  strategy:
    rollingUpdate:
      maxUnavailable: 0  # Avoid Terminating and ContainerCreating at the same time
  selector:
    matchLabels:
      app: pgbouncer
  template:
    metadata:
      labels:
        app: pgbouncer
    spec:
      # Optional: keep the POD close to the apps:
      #nodeSelector:
      #  purpose: apps
      securityContext:
        fsGroup: 1001
      containers:
        - name: pgbouncer
          image: bitnami/pgbouncer:1.17.0
          imagePullPolicy: Always
          ports:
            - name: postgresql
              containerPort: 6432
          # envFrom:
          #   - secretRef:
          #      name: pgbouncer-env
          # envFrom:
          #   - configMapRef:
          #       name: pgbouncer-env
          env:
          #   - name: POSTGRESQL_USERNAME
          #     value: postgres
            - name: POSTGRESQL_PASSWORD
              value: postgres
            - name: POSTGRESQL_HOST
              value: postgresql-svc.db
          #   - name: POSTGRESQL_DATABASE
          #     value: postgres
            # - name: PGBOUNCER_POOL_MODE
            #   value: session
            # - name: POSTGRESQL_PORT
            #   value: "5432"
            - name: PGBOUNCER_PORT
              value: "6432"
            # - name: PGBOUNCER_SERVER_RESET_QUERY
            #   value: DISCARD ALL
            # - name: PGBOUNCER_AUTH_TYPE
            #   value: scram-sha-256
            # - name: PGBOUNCER_MAX_CLIENT_CONN
            #   value: "1000"
            # - name: PGBOUNCER_IGNORE_STARTUP_PARAMETERS
            #   value: extra_float_digits
            # - name: PGBOUNCER_IGNORE_STARTUP_PARAMETERS
            #   value: ignore_startup_parameters
          # livenessProbe:
          #   tcpSocket:
          #     port: 5432
          #   periodSeconds: 60
          # lifecycle:
          #   preStop:
          #     exec:
          #       # Allow existing queries clients to complete within 120 seconds
          #       command: ["/bin/sh", "-c", "killall -INT pgbouncer && sleep 120"]
          # securityContext:
          #   allowPrivilegeEscalation: false
          #   capabilities:
          #     drop: ['all']
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
           - name: conf
             mountPath: /bitnami/pgbouncer/conf/pgbouncer.ini
             subPath: pgbouncer.ini
           - name: userlist
             mountPath: /bitnami/pgbouncer/conf/userlist.txt
             subPath: userlist.txt
      volumes:
       - name: conf
         configMap:
           name: conf
       - name: userlist
         configMap:
           name: userlist
